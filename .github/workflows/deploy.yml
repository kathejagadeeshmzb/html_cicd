name: Build and Push Docker Image

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      image-tag: ${{ steps.docker_tag.outputs.TAG }}

    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set up Docker tag
        id: docker_tag
        run: |
          TAG=$(date +%Y%m%d%H%M%S)-${GITHUB_SHA::7}
          echo "TAG=$TAG" >> $GITHUB_ENV
          echo "::set-output name=TAG::$TAG"

      - name: Build and push Docker images
        run: |
          docker build -t kathejagadeeshmzb/html-repo:${{ steps.docker_tag.outputs.TAG }} .
          docker tag kathejagadeeshmzb/html-repo:${{ steps.docker_tag.outputs.TAG }} kathejagadeeshmzb/html-repo:latest
          docker push kathejagadeeshmzb/html-repo:${{ steps.docker_tag.outputs.TAG }}
          docker push kathejagadeeshmzb/html-repo:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to EC2
        env:
          SSH_PRIVATE_KEY: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
          EC2_HOST: ${{ secrets.EC2_HOST }}
          EC2_USER: ${{ secrets.EC2_USER }}
          IMAGE_TAG: ${{ needs.build.outputs.image-tag }}
        run: |
          echo "$SSH_PRIVATE_KEY" > github-key.pem
          chmod 600 github-key.pem

          ssh -o StrictHostKeyChecking=no -i github-key.pem $EC2_USER@$EC2_HOST << EOF
            docker pull kathejagadeeshmzb/html-repo:latest
            docker pull kathejagadeeshmzb/html-repo:${{ env.IMAGE_TAG }}
            docker stop my-container || true
            docker rm my-container || true
            docker run -d --name my-container -p 8079:80 kathejagadeeshmzb/html-repo:${{ env.IMAGE_TAG }}
          EOF
